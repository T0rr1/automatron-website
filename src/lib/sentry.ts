// Sentry Configuration
// This file is auto-generated by monitoring-setup.js

import * as Sentry from '@sentry/nextjs';

const SENTRY_DSN = process.env.NEXT_PUBLIC_SENTRY_DSN;

if (SENTRY_DSN) {
  Sentry.init({
    dsn: SENTRY_DSN,
    tracesSampleRate: 1,
    profilesSampleRate: 1,
    
    // Performance monitoring
    integrations: [
      new Sentry.BrowserTracing({
        tracePropagationTargets: [
          'localhost',
          /^https:\/\/automatron\.ai/,
        ],
      }),
      new Sentry.Replay({
        maskAllText: true,
        blockAllMedia: true,
      }),
    ],
    
    // Session replay
    replaysSessionSampleRate: 0.1,
    replaysOnErrorSampleRate: 1,
    
    // Environment configuration
    environment: process.env.NODE_ENV,
    
    // Error filtering
    beforeSend(event) {
      // Filter out non-critical errors in production
      if (process.env.NODE_ENV === 'production') {
        if (event.exception?.values?.[0]?.type === 'ChunkLoadError') {
          return null;
        }
        if (event.exception?.values?.[0]?.type === 'ResizeObserver loop limit exceeded') {
          return null;
        }
      }
      return event;
    },
    
    // Release tracking
    release: process.env.VERCEL_GIT_COMMIT_SHA,
  });
}

export default Sentry;